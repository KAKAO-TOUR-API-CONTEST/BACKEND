plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

bootWar {
	enabled = true
}




group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	// Swagger(Spring 3.x.x 이상부터 SpringFox 대신, SpringDoc)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	//JWT 의존성 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    //implementation 'org.springframework.boot:spring-boot-starter-security'

	// graphQL 클래스, 인터페이스를 제공하는 라이브러리
	implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:11.0.0'
    implementation 'org.projectlombok:lombok:1.18.26'
    runtimeOnly 'com.graphql-java-kickstart:graphiql-spring-boot-starter:11.0.0'
	// graphQL 쿼리 요청에 사용되는 라이브러리
	implementation 'com.graphql-java-kickstart:playground-spring-boot-starter:11.0.0'




	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile) {
	options.compilerArgs << "-parameters"
}